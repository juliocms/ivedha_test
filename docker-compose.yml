services:
  httpd:
    image: httpd:latest
    container_name: httpd_server
    ports:
      - "80:80"

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq_server
    ports:
      - "5672:5672"
      - "15672:15672"

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"

  monitoring:
    build: ./src
    container_name: monitoring_service
    depends_on:
      - httpd
      - rabbitmq
      - postgres
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
    ports:
      - "5000:5000"

  ansible:
    build:
      context: .
      dockerfile: ./ansible/Dockerfile
    image: custom-ansible
    volumes:
      - ./ansible:/ansible
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /ansible
    entrypoint: ["ansible-playbook", "assignment.yml", "-i", "inventory"]
    command: ["-e", "task_action=check-status"]
    depends_on:
      - httpd
      - rabbitmq
      - postgres
      - monitoring